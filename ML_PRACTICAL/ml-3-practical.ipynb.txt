{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.7.12","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"markdown","source":"# Aim :- Write programs to understand the use of Matplotlib for Working with Line Chart, Histogram, Bar Chart, PieCharts.","metadata":{}},{"cell_type":"code","source":"import numpy as np\nimport matplotlib.pyplot as plt\n%matplotlib inline\n\n\n# Data\naluminum=np.array([ 6.4e-5,3.01e-5,2.36e-5,3.0e-5,7.0e-5,4.5e-5,3.8e-5,4.2e-5,2.63e-5,3.6e-5])\ncopper=np.array([4.5e-5,1.97e-5,1.6e-5,1.97e-5,4.0e-5,2.4e-5,1.9e-5,2.41e-5,1.85e-5,3.3e-5])\nsteel=np.array([3.3e-5,1.2e-5,0.9e-5,1.3e-5,1.3e-5,1.6e-5,1.4e-5,1.58e-5,1.32e-5,2.1e-5])\n\n#calculate the avarage\naluminum_mean=np.mean(aluminum)\ncopper_mean=np.mean(copper)\nsteel_mean=np.mean(steel)\n\n#create array for the plot\nmaterials =['Aluminum', 'Copper', 'Steel']\nx_pos=np.arange(len(materials))\nCTEs=[aluminum_mean,copper_mean,steel_mean]\n\n#Build the plot\nfig, ax= plt.subplots()\n\n\nax.bar(x_pos,CTEs,align='center',alpha=0.3)\nax.set_ylabel('Coefficient of Thermal Expasnsion (\\degreeC-1) ')\nax.set_xticks(x_pos)\nax.set_xticklabels(materials)\nax.set_xlabel('Outout for mean values ')\nax.set_title('Coefficient of Thermal (CTE) of Three Metals',color='red',fontsize=14)\nax.yaxis.grid(True)\n\n\nplt.tight_layout()\nplt.savefig('bar_plot.png')\nplt.show()\n","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"import numpy as np\nimport matplotlib.pyplot as plt\n# if using a Jupyter notebook, include:\n%matplotlib inline\n\n# Pie chart, where the slices will be ordered and plotted counter-clockwise:\nlabels = ['Civil', 'Electrical', 'Mechanical', 'Chemical']\nsizes = [15, 50, 45, 10]\n\n\nfig, ax = plt.subplots()\nax.pie(sizes, labels=labels, autopct='%1.5f%%')\nax.axis('equal')  # Equal aspect ratio ensures the pie chart is circular.\nax.set_title('Engineering Diciplines',color='red',fontsize=14)\n\n\nplt.show()","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"import numpy as np\nimport matplotlib.pyplot as plt\n# if using a Jupyter notebook, include:\n%matplotlib inline\n\n# Pie chart, where the slices will be ordered and plotted counter-clockwise\nlabels = ['Civil', 'Electrical', 'Mechanical', 'Chemical']\nsizes = [15, 30, 45, 10]\n\n\n# Explode out the 'Chemical' pie piece by offsetting it a greater amount\nexplode = (0.1,0.1, 0.1, 0.1)\n\nfig, ax = plt.subplots()\nax.pie(sizes,\n       explode=explode,\n       labels=labels,\n       autopct='%1.5f%%',\n       shadow=True,\n       startangle=90)\nax.axis('equal')  # Equal aspect ratio ensures the pie chart is circular.\nax.set_title('Engineering Diciplines',color='red',fontsize=14)\n\n\nplt.show()","metadata":{"trusted":true},"execution_count":null,"outputs":[]}]}